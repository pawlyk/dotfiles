[user]
    name = Paul Stadnikov
    email = paul.stadnikov@gmail.com

[core]
    editor = vim -f
    pager = cat
    autocrlf = input
	excludesfile = /Users/pavel/.gitexcludes

[merge]
    log = true

[push]
    default = matching

[alias]
    lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
    lga = "!git lg --all"
    who = "shortlog -s --"
    lp = log -p
    hist = log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short

    up = "!(git add . && git stash && git pull --rebase >&2) | grep -v 'No local changes to save' && git stash pop"
    in  = "!(git remote update -p; git log ..@{u})"
    out = "log --branches --not --remotes --decorate --oneline"
    out-verbose = "log @{u}.."

    addremove = "!(git add . && git ls-files --deleted | xargs --no-run-if-empty git rm)"
    unstage = "reset HEAD --"
    backup = "file=../`git describe`.tar && echo 'Creating `readlink -f $file`' && tar cf $file ."

    unstash = "stash apply"
    shelve = "stash"
    unshelve = "stash apply"

    edit-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; vim `f`"
    add-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; git add `f`"

    tags = tag -l
    branches = branch -l
    remotes = remote -v

    aa = add .
    st = status -sb
    ci = commit
    br = branch
    bra = branch -a
    co = "!git stash; git stash apply; git checkout \"$*\""
    df = diff
    chp =  cherry-pick
    pr = "pull --rebase"
    bl = "blame -b -w"
    cia = "commit --amend"
    pp = !"echo 'Pull'; git pull; echo 'Push'; git push"
    ; aliases for git extras https://github.com/visionmedia/git-extras
    extras = extras
    squash = squash
    summary = summary
    effort = effort
    changelog = changelog
    commits-since = commits-since
    count = count
    create-branch = create-branch
    delete-branch = delete-branch
    delete-submodule = delete-submodule
    delete-tag = delete-tag
    fresh-branch = fresh-branch
    graft = graft
    alias = alias
    ignore = ignore
    info = info
    release = release
    contrib = contrib
    repl = repl
    undo = undo
    gh-pages = gh-pages
    setup = setup
    touch = touch
    obliterate = obliterate
    feature = feature
    refactor = refactor
    bug = bug
    promote = promote
    local-commits = local-commits

[color]
    ui = auto
    diff = auto
    status = auto
    branch = auto
    interactive = auto

[color "branch"]
    current = green bold
    local = green
    remote = red bold

[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold

[color "status"]
    added = green bold
    changed = yellow bold
    untracked = red

[color "sh"]
    branch = yellow
[filter "lfs"]
	clean = git-lfs clean %f
	smudge = git-lfs smudge %f
	required = true
[difftool "sourcetree"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path = 
[mergetool "sourcetree"]
	cmd = /Applications/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true
